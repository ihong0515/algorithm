package algorithm2;

import java.util.*;

public class exam11 {
//	12. 멘토링
//	설명
//
//	현수네 반 선생님은 반 학생들의 수학점수를 향상시키기 위해 멘토링 시스템을 만들려고 합니다.
//
//	멘토링은 멘토(도와주는 학생)와 멘티(도움을 받는 학생)가 한 짝이 되어 멘토가 멘티의 수학공부를 도와주는 것입니다.
//
//	선생님은 M번의 수학테스트 등수를 가지고 멘토와 멘티를 정합니다.
//
//	만약 A학생이 멘토이고, B학생이 멘티가 되는 짝이 되었다면, A학생은 M번의 수학테스트에서 모두 B학생보다 등수가 앞서야 합니다.
//
//	M번의 수학성적이 주어지면 멘토와 멘티가 되는 짝을 만들 수 있는 경우가 총 몇 가지 인지 출력하는 프로그램을 작성하세요.
//
//
//	입력
//	첫 번째 줄에 반 학생 수 N(1<=N<=20)과 M(1<=M<=10)이 주어진다.
//
//	두 번째 줄부터 M개의 줄에 걸쳐 수학테스트 결과가 학생번호로 주어진다. 학생번호가 제일 앞에서부터 1등, 2등, ...N등 순으로 표현된다.
//
//	만약 한 줄에 N=4이고, 테스트 결과가 3 4 1 2로 입력되었다면 3번 학생이 1등, 4번 학생이 2등, 1번 학생이 3등, 2번 학생이 4등을 의미합니다.
//
//
//	출력
//	첫 번째 줄에 짝을 만들 수 있는 총 경우를 출력합니다.
//
//
//	예시 입력 1 
//
//	4 3
//	3 4 1 2
//	4 3 2 1
//	3 1 4 2
//	예시 출력 1
//
//	3
//	힌트  
//
//	출력설명

	
	
	
	 

	public static void main(String[] args) {
		// 홍재영 알고리즘 1일차 공부입니다.
		exam11 exam1 = new exam11(); 
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int m = in.nextInt();
		int [][] arr = new int [m][n];
		for(int i =0; i < m; i++) {
			for(int j = 0; j < n; j++) {
				arr[i][j] = in.nextInt();
			}
		}
		System.out.println(exam1.solution(n,m,arr));
		
	}
	public int  solution(int n,int m,int[][] arr) {
		int answer = 0;
		
		//i학생이 멘토고 
		for(int i = 1;  i <=  n; i++) {
			
		
			//j학생이 멘티일때 
			for(int j = 1; j <=  n; j++) {
				
				int count = 0;
				//m번의 시험에서 
				for(int k = 0; k < m; k++) {
					int Mento_rank = 0;
					int Menti_rank = 0;
					//n번쨰 시험의 등수가? 
					for(int s = 0; s < n; s++) {
						
						//걍 격자판 두개 그려서 서로 비교하는 거라고 봐야하나?
						//단순하게 몇명으로 주어진 학생 배열에서의 인덱스 격자판과
						//m번의 시험 애서 n등수가 각각 입력 된 격파판의 인덱스를 서로 맞춰서 비교해보는 건가
						
						if(arr[k][s] == i) Mento_rank = s;
						if(arr[k][s] == j) Menti_rank = s;
						 
					}
					//한번의 시험을 조회했을떄 또다른 학생의 등수보다 좋다면 멘토와 멘티의 조합을보핬을때 멘코 인덱스에 있는등수가 항상 멘티 인덱스 보다 클떄만 증가시킨다.
					//이게 s 반복 문 밖에 있는 이유는 그 멘토 멘티 쌍일떄 시점에서의 좌표 값에 해당하는 멘토의 시험차수에서의 등수 를 저장하고 ,멘티의 등수를 저장하고
					if(Mento_rank < Menti_rank) {
						count ++; //증가시킨다.
					}
					//s문 나와서 비교하는 것이다.
				}
				if(count == m) {
					answer++;
				}	
			}
			//이 증가 횟수가 시험 수와 일치하면 경우의 멘토 멘티가 결성된 경우하 하나 생긴것
		}
		return answer;
	}	
}
