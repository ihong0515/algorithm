package algorithm1;

import java.util.*;

public class exam10 {
	/*
	 * 10. 가장 짧은 문자거리 설명
	 * 
	 * 한 개의 문자열 s와 문자 t가 주어지면 문자열 s의 각 문자가 문자 t와 떨어진 최소거리를 출력하는 프로그램을 작성하세요.
	 * 
	 * 
	 * 입력 첫 번째 줄에 문자열 s와 문자 t가 주어진다. 문자열과 문자는 소문자로만 주어집니다.
	 * 
	 * 문자열의 길이는 100을 넘지 않는다.
	 * 
	 * 
	 * 출력 첫 번째 줄에 각 문자열 s의 각 문자가 문자 t와 떨어진 거리를 순서대로 출력한다.
	 * 
	 * 
	 * 예시 입력 1
	 * 
	 * teachermode e 예시 출력 1
	 * 
	 * 1 0 1 2 1 0 1 2 2 1 0
	 */
	
	//반복문 돌면서 그 문자와 일치 하는 indexof(문자,시작 문자) 로 인덱스 번호를 추출해서 문자열에 추가 해준다. 
	public static void main(String[] args) {
		exam10 exam1 = new exam10(); 
		Scanner in = new Scanner(System.in);
		String str = in.next();
		char ch1 = in.next().charAt(0);
		System.out.println(exam1.solution(str, ch1));
	}
	public String solution(String str,char ch1) {
		String answer = "";
		
		for(int i = 0; i < str.length(); i++) {
			
			//길이는 파라미터 문자의 index 위치 - 현 문자의 index 위치
			str = str.substring(i,str.length());
			
			int distance =  str.indexOf(ch1)  - str.indexOf(str.indexOf(str.charAt(i)));
			
			answer += Integer.toString(distance);
		}
		return answer;
	}
	//문자열을 입력 받고 문자가 이 문자열에 몇번 포함 되었는지 풀때는 일단 대소문자 둘중 하나로 통일하고 문자열 자체를 반복문을 돌려서 해당 문자열의 i 번째 문자가 주어진 문자열과 일치하는지 비교후
	//카운트 변수를 증감 시켜 주면 된다.
}
